import 'package:intl/intl.dart';import 'package:flutter/material.dart';import 'package:qrscan/qrscan.dart' as scanner;import 'package:flutter/services.dart';import 'package:shahwan/Services/service.dart';class QRViewExample extends StatefulWidget {  @override  _QRViewExampleState createState() => _QRViewExampleState();}class _QRViewExampleState extends State<QRViewExample> {  String result = "Hello Worlderer..!";String Name = "Hello Worlderer..!";   var DataTabel1;  var object;  Future _scanQR() async {    try {      String? cameraScanResult = await scanner.scan();      print("cameraScanResult" + cameraScanResult.toString());      var cameraScanResultNumber= cameraScanResult.toString().substring(0,          cameraScanResult.toString().indexOf('|'));      var cameraScanResultName= cameraScanResult.toString().substring        (cameraScanResult.toString().indexOf('|\$\$|')+4, cameraScanResult          .toString().indexOf('-'));      // var  code = cameraScanResult.toString().split(' ');      print("cameraScanResult>>>>>>>>" + cameraScanResultNumber.toString());      print("cameraScanResultName >>>>>>" + cameraScanResultName.toString());      DateTime now = DateTime.now();      String formattedDate = DateFormat('dd/MM/yyyy').format(now);        DataTabel1 = <Object>[];        DataTabel1.add(  {          "Name": cameraScanResultName,          "default_code": cameraScanResultNumber,          "product_uom_qty":''        });       var Data = <Object>[];        Data =DataTabel1  ;       print("LIST OF SCANNE >>>>> " + Data.toString());        DataTabel1.clear();      var data = {        'database': 'shahwan',        'login': 'admin',        'OdooApi': 'sgsdsfdgfdbrberb',        'date':formattedDate ,        'qrcode_sale_form_line_ids': '${Data.toString()}',      };      print("data" + data.toString());      var result1 = await  Service("qrcode_receive").Post(data);      print("result" + result1.toString());      setState(() {        result = cameraScanResultNumber.toString();        Name= cameraScanResultName.toString();        // setting string        // result with        // cameraScanResult      });    } on PlatformException catch (e) {      print(e);    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text(" المواصفات والكميات "),      ),      body: Center(          child:Column(            children: [              Text(Name.toString()),              Container(              ),              Text(result.toString()),              // Text(Data.toString()),            ],          )  // Here the scanned result will        // be shown      ),      floatingActionButton: FloatingActionButton.extended(          icon: Icon(Icons.camera_alt),          onPressed: () {            _scanQR();            // calling a function when user click on button          },          label: Text("Scan")),      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,    );  }}abstract class oneScanne {  late final String default_code;  late final String  Name;  late final String product_uom_qty;  // bool selected = false;  oneScanne(this.default_code,this.Name,this.product_uom_qty);}class Product {  final int index;  final String name;  final double price;  final int n;  Product(this.index, this.name, this.price, this.n);}// import 'dart:io';// import 'package:device_info/device_info.dart';// import 'package:flutter/foundation.dart';// import 'package:flutter/material.dart';// import 'package:qr_code_scanner/qr_code_scanner.dart';//////// class QRViewExample extends StatefulWidget {//   @override//   State<StatefulWidget> createState() => _QRViewExampleState();// }//// class _QRViewExampleState extends State<QRViewExample> {//   Barcode? result;//   QRViewController? controller;//   final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');//   DeviceInfoPlugin deviceInfo = DeviceInfoPlugin();//////   // In order to get hot reload to work we need to pause the camera if the platform//   // is android, or resume the camera if the platform is iOS.//   @override//   void reassemble() {//     super.reassemble();//     if (Platform.isAndroid) {//       controller!.pauseCamera();//     }//     controller!.resumeCamera();//   }////   @override//   Widget build(BuildContext context) {//     return Scaffold(//       body: Column(//         children: <Widget>[//           Expanded(flex: 4, child: _buildQrView(context)),//           Expanded(//             flex: 1,//             child: FittedBox(//               fit: BoxFit.contain,//               child: Column(//                 mainAxisAlignment: MainAxisAlignment.spaceEvenly,//                 children: <Widget>[//                   if (result != null)//                     Text(//                         'Barcode Type: ${describeEnum(result!.format)}   Data: ${result!.code}')//                   else//                     Text('Scan a code'),//                   Row(//                     mainAxisAlignment: MainAxisAlignment.center,//                     crossAxisAlignment: CrossAxisAlignment.center,//                     children: <Widget>[//                       Container(//                         margin: EdgeInsets.all(8),//                         child: ElevatedButton(//                             onPressed: () async {//                               await controller?.toggleFlash();//                               setState(() {});//                             },//                             child: FutureBuilder(//                               future: controller?.getFlashStatus(),//                               builder: (context, snapshot) {//                                 return Text('Flash: ${snapshot.data}');//                               },//                             )),//                       ),//                       Container(//                         margin: EdgeInsets.all(8),//                         child: ElevatedButton(//                             onPressed: () async {//                               await controller?.flipCamera();//                               setState(() {});//                             },//                             child: FutureBuilder(//                               future: controller?.getCameraInfo(),//                               builder: (context, snapshot) {//                                 if (snapshot.data != null) {//                                   return Text(//                                       'Camera facing ${describeEnum(snapshot.data!)}');//                                 } else {//                                   return Text('loading');//                                 }//                               },//                             )),//                       )//                     ],//                   ),//                   Row(//                     mainAxisAlignment: MainAxisAlignment.center,//                     crossAxisAlignment: CrossAxisAlignment.center,//                     children: <Widget>[//                       Container(//                         margin: EdgeInsets.all(8),//                         child: ElevatedButton(//                           onPressed: () async {//                             await controller?.pauseCamera();//                           },//                           child: Text('pause', style: TextStyle(fontSize: 20)),//                         ),//                       ),//                       Container(//                         margin: EdgeInsets.all(8),//                         child: ElevatedButton(//                           onPressed: () async {//                             await controller?.resumeCamera();//                           },//                           child: Text('resume', style: TextStyle(fontSize: 20)),//                         ),//                       )//                     ],//                   ),//                 ],//               ),//             ),//           )//         ],//       ),//     );//   }////   Widget _buildQrView(BuildContext context) {//     // For this example we check how width or tall the device is and change the scanArea and overlay accordingly.//     var scanArea = (MediaQuery.of(context).size.width < 400 ||//         MediaQuery.of(context).size.height < 400)//         ? 150.0//         : 300.0;//     // To ensure the Scanner view is properly sizes after rotation//     // we need to listen for Flutter SizeChanged notification and update controller//     return QRView(//       key: qrKey,//       onQRViewCreated: _onQRViewCreated,//       overlay: QrScannerOverlayShape(//           borderColor: Colors.red,//           borderRadius: 10,//           borderLength: 30,//           borderWidth: 10,//           cutOutSize: scanArea),//     );//   }////   void _onQRViewCreated(QRViewController controller)async {//     AndroidDeviceInfo androidInfo = await deviceInfo.androidInfo;//     print('Running on ${androidInfo.model}');  // e.g. "Moto G (4)"////     IosDeviceInfo iosInfo = await deviceInfo.iosInfo;//     print('Running on ${iosInfo.utsname.machine}');//     setState(() {//       this.controller = controller;//     });//     controller.scannedDataStream.listen((scanData) {//       setState(() {//         result = scanData;//       });//     });//   }////   @override//   void dispose() {//     controller?.dispose();//     super.dispose();//   }// }