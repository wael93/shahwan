import 'dart:math';import 'package:intl/intl.dart';import 'package:flutter/material.dart';import 'package:qrscan/qrscan.dart' as scanner;import 'package:flutter/services.dart';import 'package:shahwan/Services/service.dart';import 'package:shahwan/Model/ProductTabel.dart';import 'package:shahwan/constants.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:flutter/cupertino.dart';import 'package:rflutter_alert/rflutter_alert.dart';import 'Database/sqlLite.dart';import 'package:font_awesome_flutter/font_awesome_flutter.dart';import 'Homepage.dart';class QRViewExample extends StatefulWidget {  @override  _QRViewExampleState createState() => _QRViewExampleState();}class _QRViewExampleState extends State<QRViewExample> {  String result = "Hello Worlderer..!";  String Name = "Hello Worlderer..!";  var DataTabel1;  var alertStyle = AlertStyle(      alertPadding: EdgeInsets.only(top: 150, bottom: 150),      animationType: AnimationType.shrink,      isCloseButton: true,      isOverlayTapDismiss: true,      descStyle: TextStyle(fontWeight: FontWeight.w300, fontSize: 10),      animationDuration: Duration(milliseconds: 100),      alertBorder: RoundedRectangleBorder(        borderRadius: BorderRadius.circular(20.0),        side: BorderSide(          color: Colors.grey,        ),      ),      titleStyle: TextStyle(        color: Colors.red,      ),      constraints: BoxConstraints.expand(width: 300),      //First to chars "55" represents transparency of color      overlayColor: Color(0x55000000),      alertElevation: 10,      alertAlignment: Alignment.center);  DatabaseHelper db = DatabaseHelper();  Future _scanQR() async {    try {      String? cameraScanResult = await scanner.scan();      // print("cameraScanResult" + cameraScanResult.toString());      var cameraScanResultNumber = cameraScanResult          .toString()          .substring(0, cameraScanResult.toString().indexOf('|'));      var cameraScanResultName = cameraScanResult.toString().substring(          cameraScanResult.toString().indexOf('|\$\$|') + 4,          cameraScanResult.toString().indexOf('-'));      // var  code = cameraScanResult.toString().split(' ');      // print("cameraScanResult>>>>>>>>" + cameraScanResultNumber.toString());      // print("cameraScanResultName >>>>>>" + cameraScanResultName.toString());      var name = cameraScanResultName;      var defaultCode = cameraScanResultNumber;      var productUomQty = '1'.toString();      db.SaveProduct(new ProductTabel(          name.toString(), defaultCode.toString(), productUomQty));      // var data = {      //   'database': 'shahwan',      //   'login': 'admin',      //   'OdooApi': 'sgsdsfdgfdbrberb',      //   'date': formattedDate,      //   'qrcode_sale_form_line_ids': DataTabel1.toString(),      // };      // print("data" + data.toString());      // var result1 = await Service("qrcode_receive").Post(data);      // print("result" + result1.toString());      setState(() {        result = cameraScanResultNumber.toString();        Name = cameraScanResultName.toString();        // setting string        // result with        // cameraScanResult      });    } on PlatformException catch (e) {      print(e);    }  }  Future _send() async {    DateTime now = DateTime.now();    String formattedDate = DateFormat('dd/MM/yyyy').format(now);    var all = await db.getAllProducts();    print("ALL>>>>" + all.toString());    final prefs = await SharedPreferences.getInstance();    final shahwan = prefs.getString('shahwan');    final login = prefs.getString('UserName');    final OdooApi = prefs.getString('OdooApi');    var data;    data = {      'database': shahwan,      'login': "admin",      'OdooApi': "sgsdsfdgfdbrberb",      'date': formattedDate,      'qrcode_sale_form_line_ids':          '[{"default_code":"0001013073","product_uom_qty":10},{"default_code":"0001013075","product_uom_qty":4}]',    };    print("data >>>> " + data.toString());    data = await Service("qrcode_receive").Post(data);    print("result" + data.toString());    //{'message': 'Qrcode Sale Created', 'result': 'success', 'Reference': 450, 'new_qrcode_sale_id': '235'}    if (data['result'] == 'success') {      Alert(        context: context,        style: alertStyle,        title: "تمت العملية بنجاح ",        desc: "  الرقم المرجعي = ${data['Reference']}",        image: Image(            height: 60,            width: 60,            image: AssetImage("asset/images/success-icon-23187.png")),        buttons: [          DialogButton(            child: Text(              "تم",              style: TextStyle(color: Colors.white, fontSize: 20),            ),            onPressed: () => Navigator.pop(context),            color: ShahwanColor,            radius: BorderRadius.circular(20.0),          ),        ],      ).show();    } else {      Alert(        context: context,        style: alertStyle,        title: "حدث خطاء في الارسال",        desc: "  حاول التاكد من المدخلات",        image: Image(            height: 60,            width: 60,            image: AssetImage("asset/images/PngItem_6273493.png")),        buttons: [          DialogButton(            child: Text(              "تم",              style: TextStyle(color: Colors.white, fontSize: 20),            ),            onPressed: () => Navigator.pop(context),            color: ShahwanColor,            radius: BorderRadius.circular(20.0),          ),        ],      ).show();    }  }  @override  void initState() {    super.initState();    db = DatabaseHelper();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        centerTitle: true,        backgroundColor: ShahwanColor,        titleSpacing: 20,        title: Text(" المواصفات والكميات "),        leading: new IconButton(          icon: new Icon(Icons.arrow_back_ios_outlined),          onPressed: () =>  Navigator.of(context).pushReplacement(              MaterialPageRoute(                  builder: (context) => HomePage()))        ),      ),      body: FutureBuilder(        future: db.getAllProducts(),        builder: (context, AsyncSnapshot snapshot) {          if (!snapshot.hasData) {            return Center(              child: CircularProgressIndicator(),            );          } else {            return ListView.builder(                shrinkWrap: true,                physics: ScrollPhysics(),                itemCount: snapshot.data.length,                itemBuilder: (context, index) {                  ProductTabel product =                      ProductTabel.fromMap(snapshot.data[index]);                  return Container(                      width: MediaQuery.of(context).size.width,                      height: 100,                      child: Padding(                        padding:                            EdgeInsets.symmetric(horizontal: 10, vertical: 5),                        child: Ink(                            color: Colors.grey[100],                            child: ListTile(                                title: Column(                                  crossAxisAlignment: CrossAxisAlignment.center,                                  mainAxisAlignment: MainAxisAlignment.center,                                  children: [                                    Padding(                                      padding: const EdgeInsets.all(20.0),                                      child: Center(child: Row(                                        children: [                                          SizedBox(                                            height: 20,                                            width: MediaQuery.of(context)                                                    .size                                                    .width /                                                6,                                            child: FittedBox(                                              fit: BoxFit.fitWidth,                                              child: Text(                                                product.name,                                                textAlign: TextAlign.justify,                                                style: TextStyle(                                                    color: Colors.black,                                                    fontStyle: FontStyle.normal),                                              ),                                            ),                                          ),                                          SizedBox(width:15 ,),                                          SizedBox(                                            height: 20,                                            width: MediaQuery.of(context)                                                    .size                                                    .width /                                                6,                                            child: FittedBox(                                              fit: BoxFit.fitWidth,                                              child: Text(                                                product.defaultCode,                                                textAlign: TextAlign.justify,                                                style: TextStyle(                                                    color: Colors.black,                                                    fontStyle: FontStyle.normal),                                              ),                                            ),                                          ),                                          SizedBox(width:15 ,),                                          SizedBox(                                            height: 15,                                            width: MediaQuery.of(context)                                                    .size                                                    .width /                                                12,                                            child: FittedBox(                                              fit: BoxFit.contain,                                              child: Text(                                                product.productUomQty,                                                textAlign: TextAlign.justify,                                                style: TextStyle(                                                    color: Colors.black,                                                    fontStyle: FontStyle.normal),                                              ),                                            ),                                          ),                                        ],                                      )),                                    )                                  ],                                ),                                trailing: IconButton(                                  icon: Icon(Icons.add_box_outlined),                                  onPressed: () {                                    // showDialog(                                    //     context: context,                                    //     builder: (_) {                                    //       return changeDealog(username: product.name ,address:  product.defaultCode,phone: product.productUomQty,);                                    //     });                                  },                                ))),                      ));                });          }        },      ),      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,      floatingActionButton: Padding(        padding: const EdgeInsets.all(15.0),        child: Align(          alignment: Alignment.bottomCenter,          child: Container(            padding: EdgeInsets.only(top: 400, bottom: 10),            child: Row(              crossAxisAlignment: CrossAxisAlignment.center,              mainAxisAlignment: MainAxisAlignment.center,              children: <Widget>[                SizedBox(                  height: 1,                ),                FloatingActionButton.extended(                    backgroundColor: ShahwanColor,                  onPressed: () {                    _send();                    // calling a function when user click on button                  },                  icon: Icon(Icons.send_outlined),                  label: Text("حفظ"),                ),                SizedBox(                  width: 20,                ),                FloatingActionButton.extended(                    backgroundColor: ShahwanColor,                  onPressed: () {                    _scanQR();                    // calling a function when user click on button                  },                  icon: Icon(Icons.camera_alt_outlined),                  label: Text("مسح"),                ),              ],            ),          ),        ),      ),      // floatingActionButton: FloatingActionButton.extended(      //     icon: Icon(Icons.camera_alt),      //     onPressed: () {      //       _scanQR();      //      //       // calling a function when user click on button      //     },      //     label: Text("Scan")),      // floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,    );  }}